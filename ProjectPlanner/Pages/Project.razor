@page "/{ProjectId}"
@using ProjectPlanner.Data;
@using Microsoft.EntityFrameworkCore;
@inject IHttpContextAccessor httpContextAccessor
@inject ApplicationDbContext context;

<AuthorizeView>
    <Authorized>
        @if (ModalVisible)
        {
            <CreateColumnModal OnClose=@CloseModal ProjectId=@ProjectIdInt />
        }
        @if (ModalVisibleTicket)
        {
            <CreateTicketModal OnClose=@CloseTicketModal ProjectId=@ProjectIdInt />
        }
        <div class="toprow">
            <h1>@CurrentProject.Name</h1>
            <div>
                @if (CurrentProject.Columns.Count >= 1)
                {
                    <button type="button" class="btn btn-dark mx-2" @onclick=@OnAddTicket>+ Ticket</button>
                }
                <button type="button" class="btn btn-dark" @onclick=@OnAdd>+ Column</button>
            </div>
        </div>
        <div class="project-container">
            <div class="columns-container">
                @foreach (var Column in CurrentProject.Columns)
                {
                    <ProjectPlanner.Shared.Column CurrentColumn=@Column />
                }
            </div>
        </div>
    </Authorized>
    <NotAuthorized>

    </NotAuthorized>
</AuthorizeView>

<style>
    .columns-container {
        display: flex;
        flex-direction: row;
        gap: 2rem;
    }

    .project-container {
        overflow-x: auto;

    }

    .toprow {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
</style>

@code {
    [Parameter] public string ProjectId { get; set; }
    public Data.Project CurrentProject { get; set; }
    public int ProjectIdInt { get; set; }
    public bool ModalVisible { get; set; } = false;
    public bool ModalVisibleTicket { get; set; } = false;
    protected override void OnParametersSet()
    {
        ProjectIdInt = Int32.Parse(ProjectId);
        CurrentProject = context.Projects
        .Include(p => p.Columns)
        .FirstOrDefault(p => p.Id == ProjectIdInt);
    }

    public void CloseModal()
    {
        ModalVisible = false;
    }
    public void CloseTicketModal()
    {
        ModalVisibleTicket = false;
    }

    public void OnAdd()
    {
        ModalVisible = true;
    }
    public void OnAddTicket()
    {
        ModalVisibleTicket = true;
    }
}