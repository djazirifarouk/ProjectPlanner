@using ProjectPlanner.Data
@using Microsoft.EntityFrameworkCore;
@inject IHttpContextAccessor httpContextAccessor
@inject ApplicationDbContext context;
@inject Logger.Logger logger


<div class="modal modal-dialog" id="exampleModal" tabindex="-1" role="dialog" style="display: block;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="font-weight: bold;">Create a new Tag</h5>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row mb-3">
                        <label for="NameInput" class="col-sm-2 col-form-label" style="font-weight: bold;">Name</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" @bind="@TagName" @bind:event="oninput"
                                id="NameInput">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="OnClose">Back</button>
                <button type="button" class="btn btn-primary" @onclick="OnSave">Add Tag</button>
            </div>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public int TicketId { get; set; }
    public List<Data.Ticket> Tickets { get; set; }
    public string TagName { get; set; }
    public int SelectedTicketId { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Data.Ticket ticket = context.Tickets
        .FirstOrDefault(t => t.Id == TicketId);
    }
    public async void OnSave()
    {
        var ticketContext = context.Tickets;
        Data.Ticket selectedTicket = ticketContext.FirstOrDefault(t => t.Id == SelectedTicketId);

        Data.Tag tag = new Data.Tag()
        {
            Name = TagName
        };
        selectedTicket.Tags.Add(tag);
        context.SaveChanges();
        await OnClose.InvokeAsync();
    }
}