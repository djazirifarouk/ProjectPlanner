@using ProjectPlanner.Data
@using Microsoft.EntityFrameworkCore;
@inject IHttpContextAccessor httpContextAccessor
@inject ApplicationDbContext context;
@inject Logger.Logger logger;

<div class="modal modal-dialog-centered" id="exampleModal" tabindex="-1" role="dialog" style="display: block;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create a new column</h5>
                <button type="button" class="btn btn-dark" @onclick=@OnClose>x</button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row mb-3">
                        <label for="NameInput" class="col-sm-2 col-form-label">Name</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" @bind="@TicketName" @bind:event="oninput"
                                id="NameInput">
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="NameInput" class="col-sm-2 col-form-label">Description</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" @bind="@TicketDescription" @bind:event="oninput"
                                id="DescriptionInput">
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="NameInput" class="col-sm-2 col-form-label">Priority</label>
                        <div class="col-sm-10">
                            <select class="form-select" aria-label="Default select example" @bind="@TicketPriority">
                                <option selected="selected">1</option>
                                <option>2</option>
                                <option>3</option>
                                <option>4</option>
                            </select>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="NameInput" class="col-sm-2 col-form-label">Choose Column</label>
                        <select class="form-select" aria-label="Default select example" @bind="@ChosenColumnId">
                            <option selected="selected" value="@Columns.ElementAt(0).Id">@Columns.ElementAt(0).Name
                            </option>
                            @foreach (Data.Column @column in Columns.Skip(1).ToList())
                            {
                                <option value="@column.Id">@column.Name</option>
                            }
                        </select>
                    </div>
                    <div class="row mb-3">
                        <label for="NameInput" class="col-form-label">
                            Tags
                            <button type="button" class="btn btn-dark mx-2">+ Tag</button>
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="OnClose">Close</button>
                <button type="button" class="btn btn-primary" @onclick="OnSave">Save changes</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public int ProjectId { get; set; }
    public List<Data.Column> Columns { get; set; }
    public string TicketName { get; set; }
    public int ChosenColumnId { get; set; }
    public string? TicketDescription { get; set; }
    public int? TicketPriority { get; set; }
    public DateTime TicketDueDate { get; set; }
    public bool ModalVisibleTag { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        Project project = context.Projects
        .Include(p => p.Columns)
        .FirstOrDefault(p => p.Id == ProjectId);
        Columns = project.Columns;
    }
    public async void OnSave()
    {
        var columnsContext = context.Columns;
        Data.Column chosenColumn = columnsContext.FirstOrDefault(c => c.Id == ChosenColumnId);

        Data.Ticket ticket = new Data.Ticket()
            {
                Name = TicketName,
                Description = TicketDescription,
                Priority = TicketPriority
    };
        chosenColumn.Tickets.Add(ticket);
        context.SaveChanges();
        var currentUser = httpContextAccessor.HttpContext.User.Identity.Name;
        logger.LogTicketCreation(ProjectId, currentUser, ticket.Name, chosenColumn.Name);
        await OnClose.InvokeAsync();
    }

    public void OnAddTag()
    {
        ModalVisibleTag = true;
    }
}
